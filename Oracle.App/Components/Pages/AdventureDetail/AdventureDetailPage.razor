@page "/adventureDetail/{AdventureId:int}"
@inherits OracleBasePage

<OracleTitle Title="@Adventure?.Name">
	<PreTitleContent>
		<MudIconButton Icon="@Icons.Material.Filled.ArrowBack" aria-label="return" Size="Size.Small" OnClick="@(() => NavManager.NavigateTo("/adventures"))"></MudIconButton>
	</PreTitleContent>
	<PostTitleContent>
		<MudIconButton Icon="@Icons.Material.Filled.Edit" Size="Size.Small" aria-label="return"></MudIconButton>
	</PostTitleContent>
	<CommandAreaContent>
		<MudButton OnClick="UpdateAdventure">Save Changes</MudButton>
		@if (Adventure is {IsStarted: false })
		{
			<MudButton OnClick="StartAdventure">Start Adventure</MudButton>
		}
		@if (Adventure is {IsStarted : true} && Adventure is {IsComplete: false})
		{
			<MudButton OnClick="EndAdventure">End Adventure</MudButton>
		}
	</CommandAreaContent>
</OracleTitle>

@if (Adventure != null)
{
	<MudGrid>
		<MudItem sm="12" md="5">
			<div class="mb-2">
				<MudCard>
					<MudCardHeader>
						<CardHeaderContent>
							<MudText Typo="Typo.h6">Description</MudText>
						</CardHeaderContent>
						<CardHeaderActions>
							<MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Default"/>
						</CardHeaderActions>
					</MudCardHeader>
					<MudCardContent>
						<div class="mb-2">
							<MudText>@Adventure.Description</MudText>
						</div>
						<div class="mb-2">
							<MudNumericField @bind-Value="@Adventure.StartDay" Label="Start Day" Variant="Variant.Outlined" />
						</div>
                        <div class="mb-2">
                            <MudNumericField @bind-Value="@Adventure.Duration" Label="Duration" Variant="Variant.Outlined" Disabled="@Adventure.IsStarted" />
                        </div>
                        <div class="mb-2">
                            <MudSwitch @bind-Value="@Adventure.HasFixedDuration" Label="Has Fixed Duration" Disabled="@Adventure.IsStarted" />
                        </div>
					</MudCardContent>
				</MudCard>
			</div>
			<div class="mb-2">
				<MudCard>
					<MudCardHeader>
						<CardHeaderContent>
							<MudText Typo="Typo.h6">Characters</MudText>
						</CardHeaderContent>
						<CardHeaderActions>
							<MudIconButton Icon="@Icons.Material.Filled.Add" Color="Color.Default" OnClick="AddCharacter"/>
						</CardHeaderActions>
					</MudCardHeader>
					<MudCardContent>
						<MudList>
							@foreach (var character in Adventure.AdventureCharacters)
							{
								<MudListItem>
									<div class="d-flex align-center">
										<div class="me-auto">
											@character.Character.Name
										</div>
										<div>
											<MudIconButton Icon="@Icons.Material.Filled.RemoveCircleOutline" OnClick="() => RemoveCharacter(character.CharacterId)"></MudIconButton>
										</div>
									</div>
									
								</MudListItem>
							}
						</MudList>
					</MudCardContent>
				</MudCard>
			</div>
		</MudItem>
		<MudItem sm="12" md="7">
			<MudPaper>
				<div class="d-flex align-center">
					<div class="me-auto">
						<MudText Typo="Typo.h6">Adventure Timeline</MudText>
					</div>
					<div>
						<MudIconButton Icon="@Icons.Material.Filled.Add" OnClick="AddDay"/>
					</div>
				</div>
				@if (Adventure != null)
				{
					for (var i = Adventure.StartDay; i < Adventure.StartDay + Adventure.Duration; i++)
					{
						var i1 = i;
						<MudCard>
							<MudCardHeader>
								<CardHeaderContent>
									<MudText Typo="Typo.h6">Day @i1</MudText>
								</CardHeaderContent>
								<CardHeaderActions>
									<MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Default"/>
								</CardHeaderActions>
							</MudCardHeader>
							<MudCardContent>
								<div>
									<MudText Typo="Typo.body1">What Happened on this day?</MudText>
								</div>
							</MudCardContent>
						</MudCard>
					}
				}
			</MudPaper>
		</MudItem>
	</MudGrid>
}
else
{
	<div>Loading...</div>
}