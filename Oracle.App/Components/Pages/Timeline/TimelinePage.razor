@page "/timeline"
@using System.Globalization
@using Oracle.Logic.Services.TimelineService
@using Oracle.App.Components.Pages.Timeline.Components
@inherits OracleBasePage

<OracleTitle Title="Timeline" />


<MudPaper Class="pa-5">
	<table>
		<tr>
			<th class="me-3">Characters</th>
			<th class="me-3 timeline-Item timeline-Nothing" @onclick="() => AdjustDateRange(-1)"> Earlier </th>
			<th class="timeline-Container">
					@foreach (var day in Enumerable.Range(StartDay, EndDay + 1 - StartDay))
					{
						<div class="timeline-Item pa-2" style="width: @GetTimelineDayPixelWidth(TimelineDayWidthPixels, 1, TimelineDayMarginPixels); margin-right: @(TimelineDayMarginPixels)px;">
							@day
						</div>
					}
			</th>
			<th class="me-3 timeline-Item timeline-Nothing" @onclick="() => AdjustDateRange(1)"> Later </th>
		</tr>
		
		@foreach (var character in Characters)
		{
			var timeline = Timeline.First(x => x.CharacterId == character.Id).Timeline;
			TimelineDateVm? currentDayItem = null;


			<tr>
				<td class="me-3">@character.Name</td>
				<td class="me-3"></td>
				<td class="timeline-Container">
						@for (var i = StartDay; i <= EndDay; i++)
						{
							if (i == StartDay)
							{
								var previousDayItem = timeline.FirstOrDefault(x => x.StartDate <= i);

									if (previousDayItem != null)
									{
										currentDayItem = previousDayItem;
										//Render the thing
										var cssClass = currentDayItem.Type switch
										{
											TimelineEntityTypes.Adventure => "timeline-Adventure",
											TimelineEntityTypes.Activity => "timeline-Activity",
											TimelineEntityTypes.BlockingStatus => "timeline-Status",
											_ => "timeline-Nothing"
										};

										var completionClass = currentDayItem.IsComplete ? "" : "incomplete";
										var text = currentDayItem.Description;
										var duration = currentDayItem.EndDate == null
													? GetCountOfIntegers(StartDay, EndDay)
										: GetCountOfIntegers(StartDay, currentDayItem.EndDate.Value);

										<div class=" @cssClass @completionClass timeline-Item pa-2"
										     style="width: @GetTimelineDayPixelWidth(TimelineDayWidthPixels, duration, TimelineDayMarginPixels);margin-right: @(TimelineDayMarginPixels)px;">
											@text
										</div>
									}
									else
									{
										<div class="timeline-Item timeline-Nothing pa-2" 
										     style="width: @GetTimelineDayPixelWidth(TimelineDayWidthPixels, 1, TimelineDayMarginPixels);margin-right: @(TimelineDayMarginPixels)px;">
											<TimelineEmptyDay CharacterId="@character.Id" />
										</div>
										
									}

							}
							else
							{
								var dayItem = timeline.FirstOrDefault(x => x.StartDate == i);

								//Starting a new item
								if (dayItem != null)
								{
									currentDayItem = dayItem;

									//Render the thing
									var cssClass = currentDayItem.Type switch
									{
										TimelineEntityTypes.Adventure => "timeline-Adventure",
										TimelineEntityTypes.Activity => "timeline-Activity",
										TimelineEntityTypes.BlockingStatus => "timeline-Status",
										_ => "timeline-Nothing"
									};

									var completionClass = currentDayItem.IsComplete ? "" : "incomplete";
									var text = currentDayItem.Description;
									var duration = GetTimelineEventDuration(currentDayItem, EndDay);

									<div class=" @cssClass @completionClass timeline-Item pa-2"
									     style="width: @GetTimelineDayPixelWidth(TimelineDayWidthPixels, duration, TimelineDayMarginPixels);margin-right: @(TimelineDayMarginPixels)px;">
										@text
									</div>

								}
								// Check if the current thing has ended. If so, render a blank
								else
								{
									if (currentDayItem != null && currentDayItem.EndDate < i)
									{
										currentDayItem = null;
									}

									if (currentDayItem == null)
									{
										<div class="timeline-Item timeline-Nothing pa-2"
											 style="width: @GetTimelineDayPixelWidth(TimelineDayWidthPixels, 1, TimelineDayMarginPixels);margin-right: @(TimelineDayMarginPixels)px;">
											<TimelineEmptyDay CharacterId="@character.Id" />
										</div>
									}
								}
							}
						}
				</td>
				<td class="me-3"></td>
			</tr>
		}
	</table>
</MudPaper>



