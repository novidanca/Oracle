@using Oracle.Data.Models
@using Oracle.Logic.Services

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            Add new activity
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudSelect Label="Activity Type" Variant="Variant.Outlined" @bind-Value="SelectedActivityType">
            @foreach (var activityType in ActivityTypes)
            {
                <MudSelectItem Value="@activityType.Id">@activityType.Name</MudSelectItem>
            }
        </MudSelect>
        <MudSelect Label="Project" Variant="Variant.Outlined" @bind-Value="SelectedProject">
	        <MudSelectItem Value="0">Does not contribute to project</MudSelectItem>
	        @foreach (var project in Projects)
	        {
		        <MudSelectItem Value="@project.Id">@project.Name</MudSelectItem>
	        }
        </MudSelect>
    </DialogContent>
    <DialogActions>
        <MudButton Disabled="ProcessingNewActivity" OnClick="Cancel">Cancel</MudButton>
        <MudButton Disabled="ProcessingNewActivity" Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code
{
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Inject] ActivityService ActivityService { get; set; } = null!;
    [Inject] ProjectService ProjectService { get; set; } = null!;
    [Parameter] public int CharacterId { get; set; }
    [Parameter] public int Date { get; set; }
    
    private bool ProcessingNewActivity { get; set; } = false;
    
    // Activity Fields
    private int SelectedActivityType { get; set; }
    private int SelectedProject { get; set; } // Updated to allow null
    
    private List<ActivityType> ActivityTypes { get; set; } = new List<ActivityType>();
    private List<Project> Projects { get; set; } = new List<Project>();
    
    protected override async Task OnInitializedAsync()
    {
        // Get available activity types
        ActivityTypes = await ActivityService.GetActivityTypes();
        
        // Get projects for the given character id
        Projects = await ProjectService.GetActiveProjects(CharacterId);
    }
    
    private async Task Submit()
    {
        ProcessingNewActivity = true;
        
        // Try adding the new activity
        var outcome = await ActivityService.TryAddActivity(CharacterId, SelectedActivityType, Date, SelectedProject == 0 ? null : SelectedProject);
        
        if (outcome.Success)
        {
            MudDialog.Close(DialogResult.Ok("Activity Added"));
        }
    }
    
    private void Cancel() => MudDialog.Cancel();
}
